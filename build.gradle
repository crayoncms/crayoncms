buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.1"
		classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

ext {
    grailsApps = ['crayon-cms']
    grailsPlugins = ['crayon-block', 'crayon-menu', 'crayon-core']
}

subprojects { Project project -> 

	version crayoncmsVersion
	group "com.crayoncms"
	
	boolean isGrailsApp = grailsApps.contains(project.name)
    boolean isGrailsPlugin = grailsPlugins.contains(project.name)
    boolean isGrailsProject = isGrailsApp || isGrailsPlugin
	
	if ( isGrailsProject ) {
        apply plugin:"eclipse"
        apply plugin:"idea"
		apply plugin:"asset-pipeline"
		
		if ( isGrailsApp ) {
            apply plugin:"war"
            apply plugin:"org.grails.grails-web"
            apply plugin:"org.grails.grails-gsp"
        }

        if ( isGrailsPlugin ) {
            apply plugin:"org.grails.grails-plugin"
            apply plugin:"org.grails.grails-plugin-publish"
        }

        repositories {
            mavenLocal()
            maven { url "https://repo.grails.org/grails/core" }
        }
	
		dependencyManagement {
			imports {
				mavenBom "org.grails:grails-bom:$grailsVersion"
			}
			applyMavenExclusions false
		}
		
		dependencies {
			compile "org.springframework.boot:spring-boot-starter-logging"
			compile "org.springframework.boot:spring-boot-autoconfigure"
			compile "org.grails:grails-core"
			compile "org.springframework.boot:spring-boot-starter-actuator"
			compile "org.springframework.boot:spring-boot-starter-tomcat"
			compile "org.grails:grails-dependencies"
			compile "org.grails:grails-web-boot"
			compile "org.grails.plugins:cache"
			compile "org.grails.plugins:scaffolding"
			console "org.grails:grails-console"
			
			runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
			testCompile "org.grails:grails-plugin-testing"
			testCompile "org.grails.plugins:geb"
			testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
			testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
			
			compile "org.grails.plugins:spring-security-core:3.1.1"
			compile "org.grails.plugins:ajax-tags:1.0.0"
		}
		
		if ( isGrailsApp ) {
			dependencies {
				compile "org.grails.plugins:hibernate5"
				compile "org.hibernate:hibernate-core:5.1.3.Final"
				compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
				profile "org.grails.profiles:web"
				
				runtime "com.h2database:h2"
				runtime "org.postgresql:postgresql:9.4.1211.jre7"
				runtime 'mysql:mysql-connector-java:6.0.4'
			}
		}

		if ( isGrailsPlugin ) {
			dependencies {
				profile "org.grails.profiles:web-plugin"
				provided "org.grails:grails-plugin-services"
				provided "org.grails:grails-plugin-domain-class"
			}
		}
			
		bootRun {
			jvmArgs('-Dspring.output.ansi.enabled=always')
			addResources = true
		}
	
		if ( isGrailsPlugin ) {
		
			// enable if you wish to package this plugin as a standalone application
			bootRepackage.enabled = false
	
			grailsPublish {
				user = project.hasProperty("bintrayUser") ? bintrayUser : ''
				key = project.hasProperty("bintrayApiKey") ? bintrayApiKey : ''
				githubSlug = 'crayoncms/crayoncms'
				//userOrg = 'crayoncms'
				license {
					name = 'MIT'
				}
				title = "Crayon CMS"
				desc = "A minimalistic CMS for the Java platform based on Grails framework"
				developers = [rgogulakrishnan:"Gogula Rajaprabhu"]
			}

			assets {
				packagePlugin = true
			}
			
		}
	}
	
	afterEvaluate {
		if ( isGrailsProject ) {
            assets {
                minifyJs = true
                minifyCss = true
            }
        }
	}
}